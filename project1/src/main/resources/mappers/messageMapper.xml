<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.project.mapper.MessageMapper">

	<resultMap id="getMessagesResultMap" type="com.project.domain.MessageVO">
	    <id property="msg_id" column="msg_id"/>
	    <result property="msg_date" column="msg_date"/>
	    <result property="msg_reader" column="msg_reader"/>
	    <result property="msg_unread_count" column="msg_unread_count"/>
	    <result property="msg_content" column="msg_content"/>
	    
	    <result property="room_id" column="room_id"/>
	    <result property="room_name" column="room_name"/>
	    <result property="room_admin" column="room_admin"/>
	    <result property="room_created_date" column="room_created_date"/>
	    <result property="room_last_message_date" column="room_last_message_date"/>
	    <result property="room_join_date" column="room_join_date"/>
	    
	    <!-- msg_sender는 MemberVO로 매핑 -->
	    <association property="msg_sender" javaType="com.project.domain.MemberVO">
	        <id property="emp_id" column="msg_sender_emp_id"/>
	        <result property="emp_name" column="msg_sender_emp_name"/>
	        <result property="emp_dnum" column="msg_sender_emp_dnum"/>
	        <result property="emp_bnum" column="msg_sender_emp_bnum"/>
	        <result property="emp_position" column="msg_sender_emp_position"/>
	        <result property="emp_job" column="msg_sender_emp_job"/>
	        <result property="emp_profile" column="msg_sender_emp_profile"/>
	    </association>
	</resultMap>

	<select id="findRoom" resultType="int">
	    select room_id
	     from msg_room_participant
	     where room_people in (#{sender_emp_id}, #{receiver_emp_id})
	     group by room_id
	     having count(distinct room_people) = 2
	</select>

    <select id="selectLastRoomId" resultType="int">
	SELECT LAST_INSERT_ID()
	</select>
	
	<select id="getMessages" resultMap="getMessagesResultMap">
	    SELECT 
	        m.msg_id, 
	        m.msg_date, 
	        m.msg_reader, 
	        m.msg_unread_count, 
	        m.msg_content,
	        r.room_id, 
	        r.room_name, 
	        r.room_admin, 
	        e.emp_id AS msg_sender_emp_id, 
	        e.emp_name AS msg_sender_emp_name, 
	        e.emp_profile AS msg_sender_emp_profile, 
	        e.emp_dnum AS msg_sender_emp_dnum, 
	        e.emp_bnum AS msg_sender_emp_bnum, 
	        e.emp_position AS msg_sender_emp_position, 
	        e.emp_job AS msg_sender_emp_job
	    FROM 
	        messages m
	    JOIN 
	        msg_room r ON m.room_id = r.room_id
	    JOIN 
	        employee e ON m.msg_sender = e.emp_id
	    WHERE 
	        m.room_id = #{room_id}
	</select>
	
	<insert id="insertMsgRoom" parameterType="MessageVO">
	    INSERT INTO msg_room (room_name, room_admin)
	     VALUES (
	         CONCAT(#{personal_sender_emp_name}, ',', #{personal_receiver_emp_name}),
	         #{personal_sender_emp_id}
	     )
	</insert>
	
	<insert id="insertParticipant" parameterType="MessageVO">
	    INSERT INTO msg_room_participant (room_id, room_people)
	     VALUES (
	         #{room_id},#{enter_emp_id}
	     )
	</insert>
	
	<insert id="sendMessage" parameterType="MessageVO">
	    INSERT INTO messages (room_id, msg_sender, msg_content,  msg_reader, msg_unread_count)
	    VALUES (
	        #{room_id},
	        #{personal_sender_emp_id},
	        #{msg_content},
	        #{personal_sender_emp_id},
	        (
	            SELECT COUNT(*) - 1
	            FROM msg_room_participant
	            WHERE room_id = #{room_id}
	        )
	    )
	</insert>
	
	<select id="selectChatList" resultType="MessageVO">
	    SELECT r.room_id, r.room_name, r.room_last_message, r.room_last_message_date
	    FROM msg_room r
	    WHERE r.room_id IN (
	        SELECT p.room_id
	        FROM msg_room_participant p
	        WHERE p.room_people = #{emp_id}
	    )
	</select>
	
	<select id="checkReadOrNot" resultType="Integer" parameterType="MessageVO">
	    SELECT msg_id 
	    FROM messages 
	    WHERE room_id = #{room_id} 
	      AND msg_reader NOT LIKE CONCAT('%', #{msg_reader}, '%');
	</select>
	
	<update id="updateMessageReader" parameterType="MessageVO">
	    UPDATE messages
	    SET 
	        msg_reader = CONCAT(IFNULL(msg_reader, ''), 
	                            CASE 
	                                WHEN msg_reader IS NULL OR msg_reader = '' THEN ''
	                                ELSE ',' 
	                            END, 
	                            #{msg_reader}),
	        msg_unread_count = msg_unread_count - 1
	   		 WHERE room_id = #{room_id}
	      AND msg_id IN 
	      <foreach item="msg_id" collection="msg_id" open="(" separator="," close=")">
	          #{msg_id}
	      </foreach>;
	</update>
	
</mapper>  
  